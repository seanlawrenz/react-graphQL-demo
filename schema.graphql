input CreateFile {
  name: String!
}

input CreateFileInput {
  name: String!
  clientMutationId: String!
}

type CreateFilePayload {
  viewer: Viewer!
  clientMutationId: String!
  file: File
  edge: FileEdge
}

# If authentication was successful the payload contains the user and a token. If unsuccessful this payload is null.
type CreateUserPayload {
  user: User
  clientMutationId: String
  viewer: Viewer!
}

input CreateWebhookConfig {
  allComponentEventsSelected: Boolean!
  conentType: WebhookConfigContentType!
  description: String
  isActive: Boolean!
  name: String!
  payloadUrl: String!
  secret: String
  sslVerificationEnabled: Boolean!
}

input CreateWebhookConfigComponentEvent {
  eventType: WebhookConfigEventType
  isSelected: Boolean!
}

input CreateWebhookConfigComponentEventInput {
  eventType: WebhookConfigEventType
  isSelected: Boolean!
  clientMutationId: String!
}

type CreateWebhookConfigComponentEventPayload {
  viewer: Viewer!
  clientMutationId: String!
  webhookConfigComponentEvent: WebhookConfigComponentEvent
  edge: WebhookConfigComponentEventEdge
}

input CreateWebhookConfigInput {
  allComponentEventsSelected: Boolean!
  conentType: WebhookConfigContentType!
  description: String
  isActive: Boolean!
  name: String!
  payloadUrl: String!
  secret: String
  sslVerificationEnabled: Boolean!
  clientMutationId: String!
}

type CreateWebhookConfigPayload {
  viewer: Viewer!
  clientMutationId: String!
  webhookConfig: WebhookConfig
  edge: WebhookConfigEdge
}

scalar DateTime

input DeleteFileInput {
  id: ID!
  clientMutationId: String!
}

type DeleteFilePayload {
  viewer: Viewer!
  clientMutationId: String!
  file: File
  edge: FileEdge
  deletedId: ID
}

input DeleteUserInput {
  id: ID!
  clientMutationId: String!
}

type DeleteUserPayload {
  viewer: Viewer!
  clientMutationId: String!
  user: User
  edge: UserEdge
  deletedId: ID
}

input DeleteWebhookConfigComponentEventInput {
  id: ID!
  clientMutationId: String!
}

type DeleteWebhookConfigComponentEventPayload {
  viewer: Viewer!
  clientMutationId: String!
  webhookConfigComponentEvent: WebhookConfigComponentEvent
  edge: WebhookConfigComponentEventEdge
  deletedId: ID
}

input DeleteWebhookConfigInput {
  id: ID!
  clientMutationId: String!
}

type DeleteWebhookConfigPayload {
  viewer: Viewer!
  clientMutationId: String!
  webhookConfig: WebhookConfig
  edge: WebhookConfigEdge
  deletedId: ID
}

type File implements Node {
  contentType: String!
  createdAt: DateTime!
  id: ID!
  name: String!
  secret: String!
  size: Int!
  updatedAt: DateTime!
  url: String!
}

# A connection to a list of items.
type FileConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [FileEdge]

  # Count of filtered result set without considering pagination arguments
  count: Int!
}

# An edge in a connection.
type FileEdge {
  # The item at the end of the edge.
  node: File!

  # A cursor for use in pagination.
  cursor: String!
}

input FileFilter {
  # Logical AND on all given filters.
  AND: [FileFilter!]

  # Logical OR on all given filters.
  OR: [FileFilter!]
  contentType: String

  # All values that are not equal to given value.
  contentType_not: String

  # All values that are contained in given list.
  contentType_in: [String!]

  # All values that are not contained in given list.
  contentType_not_in: [String!]

  # All values less than the given value.
  contentType_lt: String

  # All values less than or equal the given value.
  contentType_lte: String

  # All values greater than the given value.
  contentType_gt: String

  # All values greater than or equal the given value.
  contentType_gte: String

  # All values containing the given string.
  contentType_contains: String

  # All values not containing the given string.
  contentType_not_contains: String

  # All values starting with the given string.
  contentType_starts_with: String

  # All values not starting with the given string.
  contentType_not_starts_with: String

  # All values ending with the given string.
  contentType_ends_with: String

  # All values not ending with the given string.
  contentType_not_ends_with: String
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  name: String

  # All values that are not equal to given value.
  name_not: String

  # All values that are contained in given list.
  name_in: [String!]

  # All values that are not contained in given list.
  name_not_in: [String!]

  # All values less than the given value.
  name_lt: String

  # All values less than or equal the given value.
  name_lte: String

  # All values greater than the given value.
  name_gt: String

  # All values greater than or equal the given value.
  name_gte: String

  # All values containing the given string.
  name_contains: String

  # All values not containing the given string.
  name_not_contains: String

  # All values starting with the given string.
  name_starts_with: String

  # All values not starting with the given string.
  name_not_starts_with: String

  # All values ending with the given string.
  name_ends_with: String

  # All values not ending with the given string.
  name_not_ends_with: String
  secret: String

  # All values that are not equal to given value.
  secret_not: String

  # All values that are contained in given list.
  secret_in: [String!]

  # All values that are not contained in given list.
  secret_not_in: [String!]

  # All values less than the given value.
  secret_lt: String

  # All values less than or equal the given value.
  secret_lte: String

  # All values greater than the given value.
  secret_gt: String

  # All values greater than or equal the given value.
  secret_gte: String

  # All values containing the given string.
  secret_contains: String

  # All values not containing the given string.
  secret_not_contains: String

  # All values starting with the given string.
  secret_starts_with: String

  # All values not starting with the given string.
  secret_not_starts_with: String

  # All values ending with the given string.
  secret_ends_with: String

  # All values not ending with the given string.
  secret_not_ends_with: String
  size: Int

  # All values that are not equal to given value.
  size_not: Int

  # All values that are contained in given list.
  size_in: [Int!]

  # All values that are not contained in given list.
  size_not_in: [Int!]

  # All values less than the given value.
  size_lt: Int

  # All values less than or equal the given value.
  size_lte: Int

  # All values greater than the given value.
  size_gt: Int

  # All values greater than or equal the given value.
  size_gte: Int
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  url: String

  # All values that are not equal to given value.
  url_not: String

  # All values that are contained in given list.
  url_in: [String!]

  # All values that are not contained in given list.
  url_not_in: [String!]

  # All values less than the given value.
  url_lt: String

  # All values less than or equal the given value.
  url_lte: String

  # All values greater than the given value.
  url_gt: String

  # All values greater than or equal the given value.
  url_gte: String

  # All values containing the given string.
  url_contains: String

  # All values not containing the given string.
  url_not_contains: String

  # All values starting with the given string.
  url_starts_with: String

  # All values not starting with the given string.
  url_not_starts_with: String

  # All values ending with the given string.
  url_ends_with: String

  # All values not ending with the given string.
  url_not_ends_with: String
}

enum FileOrderBy {
  contentType_ASC
  contentType_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  secret_ASC
  secret_DESC
  size_ASC
  size_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

input InvokeFunctionInput {
  name: String!
  input: String!
  clientMutationId: String
}

type InvokeFunctionPayload {
  result: String!
  clientMutationId: String
}

type Mutation {
  createFile(input: CreateFileInput!): CreateFilePayload
  createWebhookConfig(input: CreateWebhookConfigInput!): CreateWebhookConfigPayload
  createWebhookConfigComponentEvent(input: CreateWebhookConfigComponentEventInput!): CreateWebhookConfigComponentEventPayload
  updateFile(input: UpdateFileInput!): UpdateFilePayload
  updateUser(input: UpdateUserInput!): UpdateUserPayload
  updateWebhookConfig(input: UpdateWebhookConfigInput!): UpdateWebhookConfigPayload
  updateWebhookConfigComponentEvent(input: UpdateWebhookConfigComponentEventInput!): UpdateWebhookConfigComponentEventPayload
  updateOrCreateFile(input: UpdateOrCreateFileInput!): UpdateOrCreateFilePayload
  updateOrCreateUser(input: UpdateOrCreateUserInput!): UpdateOrCreateUserPayload
  updateOrCreateWebhookConfig(input: UpdateOrCreateWebhookConfigInput!): UpdateOrCreateWebhookConfigPayload
  updateOrCreateWebhookConfigComponentEvent(input: UpdateOrCreateWebhookConfigComponentEventInput!): UpdateOrCreateWebhookConfigComponentEventPayload
  deleteFile(input: DeleteFileInput!): DeleteFilePayload
  deleteUser(input: DeleteUserInput!): DeleteUserPayload
  deleteWebhookConfig(input: DeleteWebhookConfigInput!): DeleteWebhookConfigPayload
  deleteWebhookConfigComponentEvent(input: DeleteWebhookConfigComponentEventInput!): DeleteWebhookConfigComponentEventPayload
  createUser(input: SignupUserInput!): CreateUserPayload!
  invokeFunction(input: InvokeFunctionInput!): InvokeFunctionPayload
}

# An object with an ID
interface Node {
  # The id of the object.
  id: ID!
}

# Information about pagination in a connection.
type PageInfo {
  # When paginating forwards, are there more items?
  hasNextPage: Boolean!

  # When paginating backwards, are there more items?
  hasPreviousPage: Boolean!

  # When paginating backwards, the cursor to continue.
  startCursor: String

  # When paginating forwards, the cursor to continue.
  endCursor: String
}

type Query {
  viewer: Viewer!

  # Fetches an object given its ID
  node(
    # The ID of an object
    id: ID!
  ): Node
}

input SignupUserInput {
  clientMutationId: String!
}

input UpdateFile {
  id: ID!
  name: String
}

input UpdateFileInput {
  id: ID!
  name: String
  clientMutationId: String!
}

type UpdateFilePayload {
  viewer: Viewer!
  clientMutationId: String!
  file: File
  edge: FileEdge
}

input UpdateOrCreateFileInput {
  update: UpdateFile!
  create: CreateFile!
  clientMutationId: String!
}

type UpdateOrCreateFilePayload {
  viewer: Viewer!
  clientMutationId: String!
  file: File
  edge: FileEdge
}

input UpdateOrCreateUserInput {
  update: UpdateUser!
  clientMutationId: String!
}

type UpdateOrCreateUserPayload {
  viewer: Viewer!
  clientMutationId: String!
  user: User
  edge: UserEdge
}

input UpdateOrCreateWebhookConfigComponentEventInput {
  update: UpdateWebhookConfigComponentEvent!
  create: CreateWebhookConfigComponentEvent!
  clientMutationId: String!
}

type UpdateOrCreateWebhookConfigComponentEventPayload {
  viewer: Viewer!
  clientMutationId: String!
  webhookConfigComponentEvent: WebhookConfigComponentEvent
  edge: WebhookConfigComponentEventEdge
}

input UpdateOrCreateWebhookConfigInput {
  update: UpdateWebhookConfig!
  create: CreateWebhookConfig!
  clientMutationId: String!
}

type UpdateOrCreateWebhookConfigPayload {
  viewer: Viewer!
  clientMutationId: String!
  webhookConfig: WebhookConfig
  edge: WebhookConfigEdge
}

input UpdateUser {
  id: ID!
}

input UpdateUserInput {
  id: ID!
  clientMutationId: String!
}

type UpdateUserPayload {
  viewer: Viewer!
  clientMutationId: String!
  user: User
  edge: UserEdge
}

input UpdateWebhookConfig {
  allComponentEventsSelected: Boolean
  conentType: WebhookConfigContentType
  description: String
  id: ID!
  isActive: Boolean
  name: String
  payloadUrl: String
  secret: String
  sslVerificationEnabled: Boolean
}

input UpdateWebhookConfigComponentEvent {
  eventType: WebhookConfigEventType
  id: ID!
  isSelected: Boolean
}

input UpdateWebhookConfigComponentEventInput {
  eventType: WebhookConfigEventType
  id: ID!
  isSelected: Boolean
  clientMutationId: String!
}

type UpdateWebhookConfigComponentEventPayload {
  viewer: Viewer!
  clientMutationId: String!
  webhookConfigComponentEvent: WebhookConfigComponentEvent
  edge: WebhookConfigComponentEventEdge
}

input UpdateWebhookConfigInput {
  allComponentEventsSelected: Boolean
  conentType: WebhookConfigContentType
  description: String
  id: ID!
  isActive: Boolean
  name: String
  payloadUrl: String
  secret: String
  sslVerificationEnabled: Boolean
  clientMutationId: String!
}

type UpdateWebhookConfigPayload {
  viewer: Viewer!
  clientMutationId: String!
  webhookConfig: WebhookConfig
  edge: WebhookConfigEdge
}

type User implements Node {
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
}

# A connection to a list of items.
type UserConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [UserEdge]

  # Count of filtered result set without considering pagination arguments
  count: Int!
}

# An edge in a connection.
type UserEdge {
  # The item at the end of the edge.
  node: User!

  # A cursor for use in pagination.
  cursor: String!
}

input UserFilter {
  # Logical AND on all given filters.
  AND: [UserFilter!]

  # Logical OR on all given filters.
  OR: [UserFilter!]
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
}

enum UserOrderBy {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
}

# This is the famous Relay viewer object
type Viewer {
  allFiles(filter: FileFilter, orderBy: FileOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): FileConnection!
  allUsers(filter: UserFilter, orderBy: UserOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  allWebhookConfigs(filter: WebhookConfigFilter, orderBy: WebhookConfigOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): WebhookConfigConnection!
  allWebhookConfigComponentEvents(filter: WebhookConfigComponentEventFilter, orderBy: WebhookConfigComponentEventOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): WebhookConfigComponentEventConnection!
  user: User
  File(id: ID, secret: String, url: String): File
  User(id: ID): User
  WebhookConfig(id: ID): WebhookConfig
  WebhookConfigComponentEvent(id: ID): WebhookConfigComponentEvent
  id: ID!
}

type WebhookConfig implements Node {
  allComponentEventsSelected: Boolean!
  conentType: WebhookConfigContentType!
  description: String
  id: ID!
  isActive: Boolean!
  name: String!
  payloadUrl: String!
  secret: String
  sslVerificationEnabled: Boolean!
}

type WebhookConfigComponentEvent implements Node {
  eventType: WebhookConfigEventType
  id: ID!
  isSelected: Boolean!
}

# A connection to a list of items.
type WebhookConfigComponentEventConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [WebhookConfigComponentEventEdge]

  # Count of filtered result set without considering pagination arguments
  count: Int!
}

# An edge in a connection.
type WebhookConfigComponentEventEdge {
  # The item at the end of the edge.
  node: WebhookConfigComponentEvent!

  # A cursor for use in pagination.
  cursor: String!
}

input WebhookConfigComponentEventFilter {
  # Logical AND on all given filters.
  AND: [WebhookConfigComponentEventFilter!]

  # Logical OR on all given filters.
  OR: [WebhookConfigComponentEventFilter!]
  eventType: WebhookConfigEventType

  # All values that are not equal to given value.
  eventType_not: WebhookConfigEventType

  # All values that are contained in given list.
  eventType_in: [WebhookConfigEventType!]

  # All values that are not contained in given list.
  eventType_not_in: [WebhookConfigEventType!]
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  isSelected: Boolean

  # All values that are not equal to given value.
  isSelected_not: Boolean
}

enum WebhookConfigComponentEventOrderBy {
  eventType_ASC
  eventType_DESC
  id_ASC
  id_DESC
  isSelected_ASC
  isSelected_DESC
}

# A connection to a list of items.
type WebhookConfigConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [WebhookConfigEdge]

  # Count of filtered result set without considering pagination arguments
  count: Int!
}

enum WebhookConfigContentType {
  Application_json
  Application_Something_Else
}

# An edge in a connection.
type WebhookConfigEdge {
  # The item at the end of the edge.
  node: WebhookConfig!

  # A cursor for use in pagination.
  cursor: String!
}

enum WebhookConfigEventType {
  Created
  Changed
  Deleted
}

input WebhookConfigFilter {
  # Logical AND on all given filters.
  AND: [WebhookConfigFilter!]

  # Logical OR on all given filters.
  OR: [WebhookConfigFilter!]
  allComponentEventsSelected: Boolean

  # All values that are not equal to given value.
  allComponentEventsSelected_not: Boolean
  conentType: WebhookConfigContentType

  # All values that are not equal to given value.
  conentType_not: WebhookConfigContentType

  # All values that are contained in given list.
  conentType_in: [WebhookConfigContentType!]

  # All values that are not contained in given list.
  conentType_not_in: [WebhookConfigContentType!]
  description: String

  # All values that are not equal to given value.
  description_not: String

  # All values that are contained in given list.
  description_in: [String!]

  # All values that are not contained in given list.
  description_not_in: [String!]

  # All values less than the given value.
  description_lt: String

  # All values less than or equal the given value.
  description_lte: String

  # All values greater than the given value.
  description_gt: String

  # All values greater than or equal the given value.
  description_gte: String

  # All values containing the given string.
  description_contains: String

  # All values not containing the given string.
  description_not_contains: String

  # All values starting with the given string.
  description_starts_with: String

  # All values not starting with the given string.
  description_not_starts_with: String

  # All values ending with the given string.
  description_ends_with: String

  # All values not ending with the given string.
  description_not_ends_with: String
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  isActive: Boolean

  # All values that are not equal to given value.
  isActive_not: Boolean
  name: String

  # All values that are not equal to given value.
  name_not: String

  # All values that are contained in given list.
  name_in: [String!]

  # All values that are not contained in given list.
  name_not_in: [String!]

  # All values less than the given value.
  name_lt: String

  # All values less than or equal the given value.
  name_lte: String

  # All values greater than the given value.
  name_gt: String

  # All values greater than or equal the given value.
  name_gte: String

  # All values containing the given string.
  name_contains: String

  # All values not containing the given string.
  name_not_contains: String

  # All values starting with the given string.
  name_starts_with: String

  # All values not starting with the given string.
  name_not_starts_with: String

  # All values ending with the given string.
  name_ends_with: String

  # All values not ending with the given string.
  name_not_ends_with: String
  payloadUrl: String

  # All values that are not equal to given value.
  payloadUrl_not: String

  # All values that are contained in given list.
  payloadUrl_in: [String!]

  # All values that are not contained in given list.
  payloadUrl_not_in: [String!]

  # All values less than the given value.
  payloadUrl_lt: String

  # All values less than or equal the given value.
  payloadUrl_lte: String

  # All values greater than the given value.
  payloadUrl_gt: String

  # All values greater than or equal the given value.
  payloadUrl_gte: String

  # All values containing the given string.
  payloadUrl_contains: String

  # All values not containing the given string.
  payloadUrl_not_contains: String

  # All values starting with the given string.
  payloadUrl_starts_with: String

  # All values not starting with the given string.
  payloadUrl_not_starts_with: String

  # All values ending with the given string.
  payloadUrl_ends_with: String

  # All values not ending with the given string.
  payloadUrl_not_ends_with: String
  secret: String

  # All values that are not equal to given value.
  secret_not: String

  # All values that are contained in given list.
  secret_in: [String!]

  # All values that are not contained in given list.
  secret_not_in: [String!]

  # All values less than the given value.
  secret_lt: String

  # All values less than or equal the given value.
  secret_lte: String

  # All values greater than the given value.
  secret_gt: String

  # All values greater than or equal the given value.
  secret_gte: String

  # All values containing the given string.
  secret_contains: String

  # All values not containing the given string.
  secret_not_contains: String

  # All values starting with the given string.
  secret_starts_with: String

  # All values not starting with the given string.
  secret_not_starts_with: String

  # All values ending with the given string.
  secret_ends_with: String

  # All values not ending with the given string.
  secret_not_ends_with: String
  sslVerificationEnabled: Boolean

  # All values that are not equal to given value.
  sslVerificationEnabled_not: Boolean
}

enum WebhookConfigOrderBy {
  allComponentEventsSelected_ASC
  allComponentEventsSelected_DESC
  conentType_ASC
  conentType_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  isActive_ASC
  isActive_DESC
  name_ASC
  name_DESC
  payloadUrl_ASC
  payloadUrl_DESC
  secret_ASC
  secret_DESC
  sslVerificationEnabled_ASC
  sslVerificationEnabled_DESC
}

